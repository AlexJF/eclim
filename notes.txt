HIGH {{{
  - start developer docs
    - document the eclim architecture
    - document building eclim
    - document adding commands to eclim

  - add menu of some sort in vimdocs
  - consider a command to open topic in web docs

  - possible issue with :JavaDocSearch
    https://sourceforge.net/forum/forum.php?thread_id=2094237&forum_id=487811

  - add/test proxy support to the installer
    org.eclipse.update.core.proxy.enable=true
    org.eclipse.update.core.proxy.port=8888
    org.eclipse.update.core.proxy.host=proxy.host.net

  - add proxy support to eclim
    https://sourceforge.net/forum/message.php?msg_id=5072641
    http://java.sun.com/j2se/1.5.0/docs/guide/net/proxies.html

  - handle connectivity issues on xml validate
    https://sourceforge.net/forum/forum.php?thread_id=2105350&forum_id=487811

  - eclipse 3.4
    - http://archive.eclipse.org/eclipse/downloads/drops/R-3.3-200706251500/whatsnew/eclipse-news-all.html
    - http://download.eclipse.org/eclipse/downloads/drops/S-3.4M6-200803301350/eclipse-news-M6.html
    - leverage equinox p2

  - Ubuntu Hardy (command completion may cause segfault)
    - https://bugs.launchpad.net/ubuntu/+source/vim/+bug/219546

  - Unsolved
    - https://sourceforge.net/forum/forum.php?thread_id=1902694&forum_id=487811
    - https://sourceforge.net/forum/forum.php?thread_id=2085421&forum_id=487811
}}}

TODO {{{

  Bugs {{{
    - xml validate, if a doctype exists, but no dtd, then there is an error for
      every element since they are "not declared" (ex. ant/cvs.xml).

      <!DOCTYPE project [
        <!ENTITY userlist SYSTEM "file:include/cvs-user-list.xml">
      ]>
  }}}

  Tests {{{
    - line based matching via :JavaRegex and :PythonRegex
    - util classes and vim util functions
    - project nature add/remove
    - logger (custom logger)
    - indenting test cases
    - html validate: validation of nested javascript and css
    - archive reading (tree and list)
    - :Vcs*
      - setup a local hg repos in test/resources/
      - use eclim repos for svn testing
      - cvs testing?
    - various common vim commands
      - :DiffLastSaved
      - :OtherWorkingCopyDiff
      - :OtherWorkingCopyEdit
      - :OtherWorkingCopySplit
      - :OtherWorkingCopyTabopen
      - :LocateFileEdit
      - :LocateFileSplit
      - :LocateFileTab
      - :Sign
      - :Signs
      - :SignClearUser
      - :SignClearAll
      - :QuickFixClear
      - :LocationListClear
      - :VimgrepRelative
      - :VimgrepAddRelative
      - :LvimgrepRelative
      - :LvimgrepAddRelative
      - :CdRelative
      - :LcdRelative
    - django functionality
    - :EclimHelp, :EclimHelpGrep
    - :Jps
    - vim templating
  }}}

  Installer {{{
    - detect gnome / kde and add installer step to auto start eclimd

    - installer validation
      - java version

    - look into libarchive for bsd support.

    - consider adding command line option to installer to specify temp dir to write to
      - or maybe just use ~/.tmp


    - test installer w/ eclipse running
      - may cause issues, if so, attempt to detect if eclipse is running and
        display an intermediate step (or add to requirements steps as warning)
        alerting the user to shut it down.
  }}}

  Documentation {{{
    - document eclim / eclipse interoperability:
      https://sourceforge.net/forum/forum.php?thread_id=2144315&forum_id=487811

    - document python import functionality

    - document template plugin

    - document qf/location list filtering support

    - Chinese cheatsheet
      :EclimHelp
      :EclimGrep
      :ProjectInfo
      :ProjectNatures
      :ProjectNatureAdd
      :ProjectNatureRemove
      :ProjectTodo
      :Todo
      :DjangoFind
      :DjangoTemplateOpen
      :DjangoViewOpen
      :DjangoContextOpen
      :PhpFindDefinition
      :PhpSearch
      :PhpSearchContext
      :Validate (css, php, python, java, and javascript)
      :PyLint
      :MaximizeWindow
      :MinimizeWindow
      :MinimizeRestore
      :VimgrepRelative
      :VimgrepAddRelative
      :LvimgrepRelative
      :LvimgrepAddRelative
      :CdRelative
      :LcdRelative
      :BrowserOpen
      :VcsWebChangeSet
      :VcsWebAnnotate
      :VcsWebDiff
      :VcsWebLog
      :VcsInfo
      :VcsLog
      :VcsCat
      :VcsChangeSet
      :VcsDiff
      :VcsLog
      :TracLog
      :TracAnnotate
      :TracChangeSet
      :TracDiff
      :Buffers
      :Only
      :OtherWorkingCopyDiff
      :OtherWorkingCopyEdit
      :OtherWorkingCopySplit
      :OtherWorkingCopyTabopen
  }}}

  Common {{{
    - consider :UserProjectSettings for settings that are not common amongst developers working in a team
      - username, email, etc.
      - setting precedence would be: user > project > global
      - unless eclipse supports this concept, only include eclim settings as 'user' configurable

    - alter :LocateFile* commands or create separate versions to use or mimic
      eclipse's "find resource" functionality
      https://sourceforge.net/forum/message.php?msg_id=5169338

    - support max number of cache entries
      - len(split(globpath(g:EclimCacheDir, '*.cache*'), '\n'))
      - exclude entries beginning w/ 'eclim_'
      - maybe let the eclim server side manage this via a TimerTask.
        - or use a expand / retract ratio so vim wouldn't be constantly deleting files.

    - alternate form of :LocateFile* that starts at the path of the current
      file and walks up the tree globbing for the requested file.

    - create command :ProjectImport <dir>
      - Eclipse equivalant:
        File > Import... > General > Existing Projects Into Workspace

    - :ProjectCreateWizard - use input()

    - integrate w/ eclipse build/run system for at least simple programs.

    - add
      :VcsStatus
        - temp window w/ list of files
        - hitting <enter> on a file with:
          - M shows the diff
          - A opens the file
          - R does nothing
      :VcsOut (git equivalent?)
        - open temp window w/ list of files grouped by changeset
        - try to have <enter> on a file open a diff of remote version vs local
        - ... figure out how to handle A and R files
      :VcsIn (git equivalent?)
        - open temp window w/ list of files grouped by changeset
        - try to have <enter> on a file open a diff of remote version vs local
        - ... figure out how to handle A and R files

      - these would go against my view of not modifying local files via :Vcs
        commands.
      :VcsPush
      :VcsUpdate (git equivalent?)
      :VcsPull
        in git, 'fetch' is the analogous to hg's 'pull' and git's 'pull' is
        analogous to hg's 'fetch' (confused yet?)

    - org.eclim.project.tracker
      for sourceforge we need n urls, one for bugs, one for features, etc.
      but in the vcs log, how do you know which to use?
      ... maybe support something like '#F123' or '#123f'
      B:http://sourceforge.net/tracker/index.php?func=detail&group_id=145869&atid=763323&aid=<id> |
      F:http://sourceforge.net/tracker/index.php?func=detail&group_id=145869&atid=763326&aid=<id>

    - debugger interface
      http://www.vim.org/scripts/script.php?script_id=1703
      (not windows compatible, but worth watching)
      http://www.vim.org/scripts/script.php?script_id=663
      (probably not windows compatible either)

    - creating a project in the workspace dir w/ a different name than the
      directory doesn't work (Eclipse doesn't support this).
      :ProjectCreate ~/workspace/my_project_dir -p my_project

    - Eclipse 3.3
      - code completion for eclipse plugin.xml and MANIFEST.MF

    - gvim menu items.

    - determines the user's default workspace using (account for ~/.eclipse/org.eclipse.../configuration)
      eclipse/configuration/.settings/org.eclipse.ui.ide.prefs
      RECENT_WORKSPACES=/home/ervandew/test_workspace,/home/ervandew/workspace

    - for taglist, support universal marker tag:
      |-- marker_name --|

    - Integrate w/ google calendar
      http://code.google.com/apis/gdata/client-java.html

    - Add support for using a running eclipse gui as the eclimd server.
      - add a menu item which starts up nailgun.
        - ping first to see if one is running.
      - combine w/ vimplugin to allow vim in eclipse w/ eclipse funtionality.

    - In addition to marking lines w/ errors/warnings, highlight the offending text.
    - CursorHold validation of files.
      - via temp file?

    - implement means to highlight text and push it to the command prompt
      Ctrl-: or something similar.

    - get working under cygwin
      if has('win32unix')
      - eclim command
      - file paths
      - sh installer via cygwin
        - https://sourceforge.net/forum/forum.php?thread_id=1931818&forum_id=487811
  }}}

  C/C++ {{{
    - http://www.eclipse.org/cdt/
      http://wiki.eclipse.org/index.php/CDT
      http://download.eclipse.org/tools/cdt/releases/europa/site.xml

    - project creation
      - windows: select which toolchain to use, cygwin or mingw
      - ibm xl toolchain:
        http://help.eclipse.org/help33/index.jsp?topic=/org.eclipse.cdt.doc.user/concepts/cdt_c_whatsnew.htm

    - :CHierarchy command which opens a buffer showing the class hierarchy for
      the current file.
    - :CIncludeHierarchy command which opens a buffer showing hierarchy of each
      header file included in the current source file.
  }}}

  Css {{{
    - for css validation, attempt to provide messages for errors that the validator does not.
      - FIRST, try checking out latest css validation code and see if they have any messages.
      - * ie hacks.
        - ignore error immediately following this error report (if not another valid error).
      - missing closing }
      - font: 100%;
      - trailing , on list of selectors
  }}}

  Groovy {{{

    - http://groovy.codehaus.org/Eclipse+Plugin

  }}}

  Html {{{
    - look into using jericho instead of tidy as the html validator.

    - add support for validation via the w3c online validator
      (be sure to support configuration of the url to post to for local installs)
      http://validator.w3.org/docs/install.html
  }}}

  Java {{{
    - :JavaCorrect, need to get the eclipse apply version working (but probably
      should wait until :edit is a considered a change operation in vim).
      https://sourceforge.net/forum/message.php?msg_id=5087396
      - also consider hooking into eclipse's change history support to allow the
        user to undo changes made by eclipse.

    - :JavaHierarchy command which opens a buffer showing the class hierarchy for
      the current file.

    - :JavaImportAll? some sort of command to scan the file for missing imports
      and import them.
      - see 'Organize Imports' functionality in eclipse.

    - generic support for java based xml config file validation
      - support list of xpaths to class name attributes / values to validate

    - look into code refactoring support.
      - Safe deletes. Check for references before deleting.
      - Convert anonymous class into inner/outer class.
      - Convert inner class to outer class.
      - Extract interface.
      - Method / Class / Field renaming.
      - Push methods / fields up to superclass or down to subclass.
      - Move types, methods, fields.
      - Code "Clean Up"
        - Remove Unused Code (imports, private methods, private constructors,
          private types).
        - JSE 5.0 (add missing @Override, add missing @Deprecated)

    - create spring file validation of class names like w/ log4j.

    - JUnit
      - results in the browser.
      - When viewing a junit result file allow linking from stack trace
        elements.
      - File type support of junit result files w/ search functionality.
      - Integrate with eclipse junit execution env and provide user with option to
        choice which to use (eclipse or current external version).
        org.eclim.java.junit.engine=(eclipse|external)

    - :JavaImpl support anonymous classes.

    - For commands that spawn temp buffer, assign a b:currentfile var to the
      file that opened the buffer so that other commands can still be invoked
      by changing the get file name function to examine b:currentfile.
      - JavaImpl, JavaDelegate, JUnitImpl, JUnitResult

    - add :JavaBeanImpl for defining an implementation of a bean interface.
    - automate switch statement generation for enums.
      When switch(enum), create cases for all enum values.
    - :JavaImpl, wrap long parameter lines.
    - modify for loop abbreviations to increment the looping var if the current
      one is taken.  (ii, jj, kk, ll, mm, nn, ...)
    - create a groovy templating harness
      - create utility class with methods such as
        - createMethod (velocity_template, values)
        - createField (velocity_template, values)
        - createImport (velocity_template, values)
        - createClass (velocity_template, values)
        - createCode (velocity_template, values) - insert code at current
          cursor position
      - standard templates
        - jakarta equals, hashCode, toString.
        - logging
    - push method to interface... create method in interface from method in
      implementation.
    - With :JavaRun, also have an input buffer that when saved pushes the text
      to stdin of the running app, and then clears the buffer for more input.
      - java version of http://www.vim.org/scripts/script.php?script_id=165 ?

    - logging
      - Templates for generating logging statements:
        Ex. logger.debug("${methodSignature} - ");
      - Support for replacing System.out, System.err, and printStackTrace()
        with logging statements.

    - searching
      - Expand searching from non java source files (spring xml, hibernate xml,
        etc).
      - Third party plugins may provide this functionality.

    - content assist
      - Generate anonymous class body, including all methods that need to be
        implemented, from the start of defining one (new Runnable())<br/>
        Eclipse Equiv: Ctrl+Space
      - Create method from the call to one that does not yet exist or
        change method signature (add/remove parameters/agruments).<br/>
        Eclipse Equiv: Ctrl+1
      - Create new field to hold constructor argument.<br/>
        Eclipse Equiv: Ctrl+1
      - Auto surround method call that throws an exception w/ try/catch
        block or if surrounded and doesn't catch necessary exceptions,
        add those catch statements.<br/>
        Eclipse Equiv: Ctrl+1
      - Wrap source block (selection) in do,if,for,try,while.<br/>
        Eclipse Equiv: Ctrl+1
      - many more provided by eclipse...

    - code analysis
      - http://pmd.sourceforge.net/ PMD
      - http://www.jutils.com/ Lint4j
      - http://coverlipse.sourceforge.net Coverclipse
      - http://java-source.net/open-source/code-coverage Other code coverage tools
      - http://java-source.net/open-source/code-analyzers Other code analyizers

    - auto configure eclipse indent style

      import org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants;

      (JavaCore|IJavaProject).setOption(
        DefaultCodeFormatterConstants.FORMATTER_TAB_CHAR :
          DefaultCodeFormatterConstants.MIXED, JavaCore.TAB, JavaCore.SPACE
        DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE
        DefaultCodeFormatterConstants.FORMATTER_USE_TABS_ONLY_FOR_LEADING_INDENTATIONS :
          DefaultCodeFormatterConstants.TRUE|FALSE
      )

    JDT Tips
    http://help.eclipse.org/help31/index.jsp?topic=/org.eclipse.jdt.doc.user/tips/jdt_tips.html
    JDT What's New
    http://help.eclipse.org/help31/index.jsp?topic=/org.eclipse.jdt.doc.user/whatsNew/jdt_whatsnew.html

  }}}

  Javascript {{{
    http://wiki.eclipse.org/index.php/ATF/JSDT
    http://labs.adobe.com/technologies/jseclipse/
    http://www.aptana.org/ aptana (owners of radrails)
    http://wiki.eclipse.org/index.php/ATF/JSDT eclipse (not yet developed)
    http://www.eclipse.org/dltk/ dltk (experimental)

    - :JavascriptRegex (maybe use rhino or see if eclipse has something)
    - javascript code completion

    - javascript doc lookup for common libraries
      - :JavascriptDocSearch
      - yui
        http://developer.yahoo.com/yui/docs/YAHOO.widget.Dialog.html#configButtons
      - prototype
      - jquery
      - JsDoc generated docs
        http://code.google.com/apis/opensocial/docs/0.7/reference/gadgets.views.html
      ...
      http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference
  }}}

  Jdbc {{{
    - dbext (http://www.vim.org/scripts/script.php?script_id=356)
      - at a glance, seems to satify my requirements.

    - Create connection profiles
      - eclim_jdbc_profile_<name> (where to store these settings? ... .eclim/jdbc/<name>.properties)
        - Driver Class:
        - Driver Url:
        - Libs (comma seperated paths to jar files):

    - Support two open buffers, one for statements to execute, another for results
      [Sql Editor]
      [Sql Results]
      - support some sort of query history

    - Support tree with database metadata
  }}}

  Jsp {{{
    jsp
      - <%%>, <%=%> code completion
      - <%@ page import="javax." %> completion
      - <jsp: completion, with attribute name completion
      - taglib completion (<core:<c-x><c-u>), including attribute name completion
  }}}

  Perl {{{
    http://e-p-i-c.sourceforge.net/

    - add :PerlRegex

    - static validation
      Perl::Critic
      http://search.cpan.org/~elliotjs/Perl-Critic-1.082/lib/Perl/Critic.pm

    - doc search on cpan
  }}}

  Php {{{
    - add :PhpRegex
      - will require that php is compiled with cli support.
  }}}

  Python {{{
    - jython?

    - modify :DjangoFind to account for django provided tags and filters.

    - when adding new method for a class, auto add self as first parameter.

    - refactoring: http://rope.sourceforge.net/
      - this lib includes auto-completion and find definition!!!

    - debugger: http://pyclewn.wiki.sourceforge.net/
      - seems to currently use netbeans support which means gvim only... look
        into making it console vim compatible.
  }}}

  Ruby {{{
    - http://www.eclipse.org/dltk/ dltk
    - http://rubyeclipse.sourceforge.net/ rubyeclipse
    - http://www.radrails.org/ rad rails
    - jruby?
  }}}

  SQL {{{
    - sql pretty print

    - antlr grammers for sql dialects (mysql, postgreql, oracle)
      - http://www.antlr.org/grammar/list contains a couple oracle pl/sql
        grammers and an ansi sql grammer
  }}}

}}}

NOTES {{{

  Steps for new releases {{{
    Note: make sure to do a quick test with sh (dash) instead of bash

    1) create sourceforge release
       - update windows and linux download pages with latest file to download.
    2) update documentation website
    3) tag svn
       $ svn cp https://eclim.svn.sourceforge.net/svnroot/eclim/trunk \
                https://eclim.svn.sourceforge.net/svnroot/eclim/tags/<version>
    4) announce on freshmeat
       - http://freshmeat.net/projects/eclim/
  }}}

  Adding a new plugin {{{
    Installer:
      install.properties: add the following keys
        - featureList.<plugin>
        - featureList.<plugin>.html
      dependencies.properties: add feature dependencies
      EclipsePluginStep: add feature to FeatureNameComparator
      excludes: add <plugin>.excludes file
  }}}

  Troubleshooting {{{

    Update manager from command line:
      http://help.eclipse.org/help33/index.jsp?topic=/org.eclipse.platform.doc.isv/reference/misc/update_standalone.html

    Windows:
      - starting eclim without spawning seperate console
        > java -Declim.home="C:/Program Files/eclipse/plugins/org.eclim_1.2.4/"
               -jar plugins/org.eclipse.equinox.launcher_<version>.jar
               -debug -consolelog -nosplash -clean -refresh
               -application org.eclim.application -vmargs
               -Declim.home="C:/Program Files/eclipse/plugins/org.eclim_1.2.4/"

    Minimum execution of vim w/ eclim support
      echo -c "set nocompatible\nsyntax on\nfiletype plugin on" > _vimrc.minimum
      vim -u _vimrc.minimum
      gvim -u _vimrc.minimum -U none

    Helpful link for debugging plugin errors.
      http://eclipse.org/eclipse/platform-core/documents/3.1/debug.html

    Core Tools (plugin with tools for debugging / fixing issues)
      http://www.eclipse.org/eclipse/platform-core/downloads.html (Spies/Tools)
      - Workspace Re-Builder (looks a bit old, may need some work).

    When using a project created from eclipse, may get errors in log when saving +
    closing a src file, complaining that the .swp file doesn't exist.  To fix this,
    you need to exclude the swp files from the eclipse build.

      Project > Properties > Java Build Path
        Expand Source folder node
        Select "Excluded"
        Hit "Edit"
        Add exclusion pattern: **/*.swp
    Or
      Edit .classpath
        Add attribute to src classpathentry
          excluding="**/*.swp"
        You can use '|' to delineate multiple entries
          excluding="**/*.swp|**/*.tmp"
  }}}

  Benchmarks {{{
    Trivial memory benchmark of vanilla eclipse vs eclim headless eclipse.
    1) start the application
    2) open and save org.eclim.Service
    2) open and save build.xml

             Virtual  Resident  Shared  (in megs)
    eclim    360      132       54
    eclipse  500      143       59
  }}}

  Pydev, files modified to remove it: {{{
    build.xml
    src/ant/docs.xml
    src/installer/build.xml
    src/installer/installer.xml
    src/installer/java/org/eclim/installer/step/FeatureProvider.java
    src/installer/resources/dependencies.properties
    src/installer/resources/install.properties
    src/vim/eclim/autoload/eclim/python/django.vim
    src/vim/eclim/ftplugin/python/eclim_complete.vim
    src/vim/eclim/ftplugin/python/eclim_definition.vim
  }}}

  Potential Contributors {{{
    Anton Sharonov (haron13)
      - good work with :JavaFormat contribution

    fidlej
      - good patch work so far
        https://sourceforge.net/tracker/index.php?func=detail&aid=1617060&group_id=145869&atid=763326
        https://sourceforge.net/tracker/index.php?func=detail&aid=1787180&group_id=145869&atid=763323
        https://sourceforge.net/tracker/index.php?func=detail&aid=1781687&group_id=145869&atid=763323
  }}}

  Licensing {{{
    http://www.fsf.org/licensing/licenses/ (lists compatible, not-compatible licenses)
    http://www.eclipse.org/legal/eplfaq.php

    - GPLv3 and Apache are one way compatible (gpl code can link to apache code).
    - GPL and EPL are not compatible
      - But as copyright holder I can provide permission to link to eclipse:
        http://www.fsf.org/licensing/licenses/gpl-faq.html#GPLIncompatibleLibs
      - EPL also has different definition of "derivative work":
        http://www.eclipse.org/legal/eplfaq.php#DERIV (#25 - 27)
        - A few of my files may be considered derivative works and will need to
          be licensed as EPL accordingly.
  }}}

  Autostart {{{

    Gnome (this may work for enlightenment 17 and xfce4 as well)
      $ mkdir -p ~/.config/autostart
      $ cp $ECLIPSE_HOME/plugins/org.eclim_<version>/bin/native/linux/eclimd.desktop ~/.config/autostart

    KDE
      $ mkdir -p ~/.kde/Autostart
      $ cp $ECLIPSE_HOME/plugins/org.eclim_<version>/bin/native/linux/eclimd ~/.kde/Autostart

  }}}

  Running in true headless environment:
  http://en.wikipedia.org/wiki/Xvfb
    - Xvfb is included with xorg-server

}}}

DOCS (scratch) {{{

  Builing eclim {{{
    Before building eclipse you will need to:
      - set the following environment variables
        - ECLIM_ECLIPSE_HOME: points to your eclipse install
        - VIMFILES: points to the directory where you want all the vim files
          deployed to (typically HOME/.vim or HOME/vimfiles)
      - make sure you install the required eclipse features
        - wst
        - pdt

    Once your environment is setup you should then just need to run '$ ant'
    from the top level directory of the eclim code base.  From there, starting
    and stopping eclim is the same as if you had installed it via the
    installer.

    Note: on windows, currently only building of eclim is supported.  Running
    unit tests, generating docs, building the installer, etc. are not yet
    supported.
  }}}

}}}

// vim:fdm=marker:tw=0
