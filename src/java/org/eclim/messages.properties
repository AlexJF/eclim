# Copyright (c) 2004 - 2005
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

request.unrecognized=Unrecognized request ''{0}''.

command.required='command' option required.
command.not.found=No command ''{0}'' found.

# project status messages.
project.created=Created project ''{0}''.
project.updated=Updated project ''{0}''.
project.deleted=Deleted project ''{0}''.

# project messages.
project.name.exists=Project with name ''{0}'' already exists at ''{1}''.
project.not.found=Project ''{0}'' not found.
project.depends.not.found=Dependent project ''{0}'' not found.

# preference messages.
preference.not.found=No preference ''{0}'' found.
preference.invalid=\
  Preference value ''{1}'' for preference ''{0}'' must match regex ''{2}''.

# eclipse options messages.
option.not.found=No option ''{0}'' found.
option.invalid=\
  Option value ''{1}'' for option ''{0}'' must match regex ''{2}''.

# file messages
file.not.found=File ''{0}'' not found.
file.updated=File ''{0}'' updated.
dir.not.found=Directory ''{0}'' not found.

resource.unable.resolve=Unable to resolve resource ''{0}''.

######### Setting Descriptions #########
org.eclim.java.library.root=Default location of jar dependencies.
org.eclim.java.logging.impl=Logging implementation to use.
org.eclipse.jdt.core.compiler.source=\
  Java version to keep source code compatable with.

######### Option Descriptions #########
help.description=Print full usage information.
port.description=The server port.
command.description=The command to execute.
filter.description=\
  Xml output is processed by the corresponding filter type if it exists.

######### Error Messages #########
required.options.missing=\
  Missing required option(s) for the requested command - {0}
invalid.options=\
  Command contains invalid option(s) for the requested command - {0}

java_search.indeterminate=You must specify a valid pattern or element search.
java_search.type.required=Type (-t) required for pattern searches.

######### Command options #########
ping.options=
shutdown.options=
project_create.options=\
  REQUIRED f folder ARG,\
  OPTIONAL d depends ARG
project_update.options=\
  REQUIRED n name ARG,\
  OPTIONAL b buildfile ARG,\
  OPTIONAL s settings ARG
project_info.options=\
  OPTIONAL n name ARG,\
  OPTIONAL s setting ARG
project_delete.options=\
  REQUIRED n name ARG
java_src_update.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG
java_import.options=\
  REQUIRED p pattern ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL s scope ARG
java_search.options=\
  OPTIONAL f file ARG,\
  OPTIONAL o offset ARG,\
  OPTIONAL l length ARG,\
  OPTIONAL p pattern ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL x context ARG,\
  OPTIONAL s scope ARG
java_complete.options=\
  REQUIRED f file ARG,\
  REQUIRED o offset ARG
read_file.options=\
  REQUIRED f file ARG

######### Usage Strings #########
usage=\
eclim [-port port] [-filter filter]\n\
\u0020     -command command [command options] [command args]\n\
eclim -?/--help for more information

command.usage.header=\
\n\
Command      Args\n\
-----------------\n

ping.usage=\
ping         No args.

shutdown.usage=\
shutdown     No args.

java_search.usage=\
java_search (-f/--file <file> -o/--offset <offset> -l/--length <length> |\n\
\u0020       -p/--pattern <pattern> -t/--type <type>) -x/--context <context>\n\
\u0020       [-s/--scope <scope>]\n\
\u0020            -f/-file <file>\n\
\u0020              The file where the search is originating from.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offet in the file where the search\n\
\u0020              is orignating from.\n\
\u0020            -l/--length <offset>\n\
\u0020              The length of the current element in the file where\n\
\u0020              the search is originating from.\n\
\u0020            -p/--pattern <pattern>\n\
\u0020              Pattern to search for.\n\
\u0020            -t/--type <type>\n\
\u0020              The type of element to search for, where the\n\
\u0020              possible types are:\n\
\u0020                [annotation|class|classOrEnum|classOrInterface|\n\
\u0020                 constructor|enum|field|interface|method|package|type]\n\
\u0020            -x/--context <context>\n\
\u0020              The context of the search, where the possible\n\
\u0020              contexts include:\n\
\u0020                [all|declarations|implementors|references]\n\
\u0020            -s/--scope <scope>\n\
\u0020              Not currently used.\n\
\u0020              The scope of the search, where the possible\n\
\u0020              scopes include:\n\
\u0020                [file|hierarchy|project|workspace]

java_import.usage=\
java_import -p/--pattern <pattern> [-t/--type <type>] [-s/--scope <scope>]\n\
\u0020            -p/--pattern <pattern>\n\
\u0020              Element to import (typically a class name).\n\
\u0020            -t/--type <type>\n\
\u0020              Not currently used (will be specific to JSE 1.5)\n\
\u0020            -s/--scope <scope>\n\
\u0020              Not currently used.\n\
\u0020              The scope of the search, where the possible\n\
\u0020              scopes include:\n\
\u0020                [file|hierarchy|project|workspace]

java_complete.usage=\
java_complete -f/--file <file> -o/--offset <offset>\n\
\u0020            -f/--file <file>\n\
\u0020              The file to request code completion for.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.

java_src_update.usage=\
java_src_update -p/--project <project> [-f/--file <file>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The path to the file to update (relative to the\n\
\u0020              file's src dir.

project_create.usage=\
project_create -f/--folder <folder> [-d/--depends <depends>]\n\
\u0020            -f/--folder <folder>\n\
\u0020              The base folder to create the project from.\n\
\u0020            -d/--depends <depends>\n\
\u0020              Comma separated list of other projects this project\n\
\u0020              depends on.

project_update.usage=\
project_update -n/--name <name>\n\
\u0020       [-b/--buildfile <buildfile> | -s/--settings <settings>]\n\
\u0020            -n/--name <name>\n\
\u0020              The name of the project to update.\n\
\u0020            -b/--buildfile <buildfile>\n\
\u0020              The build file (ivy.xml for ivy , project.xml for)\n\
\u0020              maven to merge classpath updates from.\n\
\u0020            -s/--settings <settings>\n\
\u0020              The project settings to save.

project_info.usage=\
project_info [-n/--name <name>]\n\
\u0020            -n/--name <name>\n\
\u0020              The name of the project to get info for (if not\n\
\u0020              provided, list all available projects).\n\
\u0020            -s/--setting <setting>\n\
\u0020              If supplied, only the value for this setting is\n\
\u0020              retrieved.

project_delete.usage=\
project_delete -n/--name <name>\n\
\u0020            -n/--name <name>\n\
\u0020              The name of the project to delete.

read_file.usage=\
read_file -f/--file <file>\n\
\u0020            -f/--file <file>\n\
\u0020              The commons vfs compatable path to the file.
