# Copyright (c) 2005 - 2008
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

org.apache.commons.cli.AlreadySelectedException=Argument already supplied: {0}
org.apache.commons.cli.MissingArgumentException=Missing argument for required option: {0}
org.apache.commons.cli.MissingOptionException=Missing required option: {0}
org.apache.commons.cli.UnrecognizedOptionException={0}

request.unrecognized=Unrecognized request ''{0}''.

command.required='command' option required.
command.not.found=No command ''{0}'' found.

plugin.resources.not.found=PluginResources not found for plugin ''{0}''.

settings.updated=Settings updated.

# project status messages.
project.created=Created project ''{0}''.
project.updated=Updated project ''{0}''.
project.deleted=Deleted project ''{0}''.
project.refreshed=Refreshed project ''{0}''.
project.opened=Opened project ''{0}''.
project.closed=Closed project ''{0}''.
project.status.open=open
project.status.closed=closed
project.nature.added=Nature(s) added to project.
project.nature.removed=Nature(s) removed from project.

# project messages.
project.name.exists=Project with name ''{0}'' already exists at ''{1}''.
project.not.found=Project ''{0}'' not found.
project.missing.nature=Project ''{0}'' does not have the required nature ''{1}''.
project.depends.not.found=Dependent project ''{0}'' not found.
project.location.null=Unable to locate project directory.\
  Project directory may have been deleted or made unavailable.
project.copyright.not.found=Copyright file not found: ''{0}''.
project.file.mismatch=File path ''{0}'' does not start with project path ''{1}''.

# preference messages.
preference.not.found=No preference ''{0}'' found.
preference.invalid=\
  Preference value ''{1}'' for preference ''{0}'' must match regex ''{2}''.

# eclipse options messages.
option.not.found=No option ''{0}'' found.
option.invalid=\
  Option value ''{1}'' for option ''{0}'' must match regex ''{2}''.

# file messages
file.not.found=File ''{0}'' not found.
file.updated=File ''{0}'' updated.
dir.not.found=Directory ''{0}'' not found.

template.not.found=No template ''{0}'' found.
template.eval.error=Error evaluating template ''{0}''.
template.type.invalid=Invalid or no type defined in template name ''{0}''.

script.not.found=No script ''{0}'' found.

resource.unable.resolve=Unable to resolve resource ''{0}''.

required.options.missing=\
  Missing required option(s) for the requested command - {0}
invalid.options=\
  Command contains invalid option(s) for the requested command - {0}

taglist.kind.invalid=\
  Tag kind must be a single character to uniquely identify the tag: ''{0}''.

vim.script.updated=\
  Vim script ''{0}'' updated.  Restart vim for changes to take affect.
http.error=Http Error: {0}

######### Setting Descriptions #########
org.eclim.user.name=Your username or full name.
org.eclim.user.email=Your email address.

org.eclim.project.version=Version number for your project.
org.eclim.project.copyright=\
  The project relative file containing the copyright to insert on files.
org.eclim.project.vcs.tracker=\
  Url used to open a tracker bug / feature by id. ''<id>'' will be replaced w/ the bug / feature id.
org.eclim.project.vcs.viewvc=\
  Base url from which ViewVC urls can be constructed for project relative files.

######### Option Descriptions #########
help.description=Print full usage information.\n\
Ex.\n\
  eclim -? org.eclim\n\
  eclim -? org.eclim.ant\n\
  eclim -? org.eclim.jdt\n\
  eclim -? org.eclim.pdt

command.description=The command to execute.

######### Command options #########
ping.options=
shutdown.options=
settings.options=\
  OPTIONAL s setting ARG
settings_update.options=\
  OPTIONAL s settings ARG

project_create.options=\
  REQUIRED f folder ARG,\
  OPTIONAL p name ARG,\
  REQUIRED n natures ARG,\
  OPTIONAL d depends ARG
project_list.options=\
  OPTIONAL n nature ARG
project_settings.options=\
  OPTIONAL p project ARG,\
  OPTIONAL s setting ARG
project_update.options=\
  REQUIRED p project ARG,\
  OPTIONAL b buildfile ARG,\
  OPTIONAL s settings ARG
project_delete.options=\
  REQUIRED p project ARG
project_refresh.options=\
  REQUIRED p project ARG
project_info.options=\
  REQUIRED p project ARG
project_open.options=\
  REQUIRED p project ARG
project_close.options=\
  REQUIRED p project ARG
project_natures.options=\
  OPTIONAL p project ARG
project_nature_add.options=\
  REQUIRED p project ARG,\
  REQUIRED n nature ARG
project_nature_remove.options=\
  REQUIRED p project ARG,\
  REQUIRED n nature ARG
project_nature_aliases.options=

workspace_dir.options=
xml_format.options=\
  REQUIRED f file ARG,\
  REQUIRED w linewidth ARG,\
  REQUIRED i indent ARG
xml_validate.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  OPTIONAL s schema NOARG
taglist.options=\
  REQUIRED c ctags ANY
patch_revisions.options=\
  REQUIRED f file ARG
patch_file.options=\
  REQUIRED f file ARG,\
  REQUIRED r revision ARG,\
  REQUIRED b basedir ARG

archive_list.options=\
  REQUIRED f file ARG
archive_list_all.options=\
  REQUIRED f file ARG
archive_read.options=\
  REQUIRED f file ARG

######### Usage Strings #########
usage=\
eclim -command <command> [command options ...]\n\

command.usage.header=\
\n\
Command             Args\n\
------------------------\n

ping.usage=\
ping\n\
\u0020            no args

shutdown.usage=\
shutdown\n\
\u0020            no args

project_create.usage=\
project_create -f/--folder <folder> [-p/--name <name>]\n\
\u0020       -n/--natures <natures> [-d/--depends <depends>]\n\
\u0020            -f/--folder <folder>\n\
\u0020              The base folder to create the project from.\n\
\u0020            -p/--name <name>\n\
\u0020              The name to give to the project.\n\
\u0020            -n/--natures <natures>\n\
\u0020              Comma separated list of aliases for natures to be\n\
\u0020              added to this project.\n\
\u0020            -d/--depends <depends>\n\
\u0020              Comma separated list of other projects this project\n\
\u0020              depends on.

settings.usage=\
settings [-s/--setting <setting>]\n\
\u0020            -s/--setting <setting>\n\
\u0020              If supplied, only the value for this setting is\n\
\u0020              retrieved.

settings_update.usage=\
settings_update -s/--settings <settings>]\n\
\u0020            -s/--settings <settings>\n\
\u0020              The temp file containing the settings to save.

project_list.usage=\
project_list [-n/--nature <nature>]\n\
\u0020            -n/--nature <nature>\n\
\u0020              Optional nature alias to filter projects by.

project_settings.usage=\
project_settings <nature>] [-p/--project <project> -s/--setting <setting>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to get info for (if not\n\
\u0020              provided, list all available projects).\n\
\u0020            -s/--setting <setting>\n\
\u0020              If supplied, only the value for this setting is\n\
\u0020              retrieved.

project_update.usage=\
project_update -p/--project <project>\n\
\u0020       [-b/--buildfile <buildfile> | -s/--settings <settings>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to update.\n\
\u0020            -b/--buildfile <buildfile>\n\
\u0020              The build file (ivy.xml for ivy , project.xml for)\n\
\u0020              maven to merge classpath updates from.\n\
\u0020            -s/--settings <settings>\n\
\u0020              The temp file containing the project settings to save.

project_delete.usage=\
project_delete -p/--project <project>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to delete.

project_refresh.usage=\
project_refresh -p/--project <project>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to refresh.

project_info.usage=\
project_info -p/--project <project>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to get info for.

project_open.usage=\
project_open -p/--project <project>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to open.

project_close.usage=\
project_close -p/--project <project>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project to close.

project_natures.usage=\
project_natures [-p/--project <project>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project.

project_nature_add.usage=\
project_nature_add -p/--project <project> -n/--nature <nature>[,<nature>,...]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project.\n\
\u0020            -n/--nature <nature>\n\
\u0020              Comma seperated list of nature aliases.

project_nature_remove.usage=\
project_nature_remove -p/--project <project> -n/--nature <nature>[,<nature>,...]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project.\n\
\u0020            -n/--nature <nature>\n\
\u0020              Comma seperated list of nature aliases.

project_nature_aliases.usage=\
project_nature_aliases\n\
\u0020            no args

read_file.usage=\
read_file -f/--file <file>\n\
\u0020            -f/--file <file>\n\
\u0020              The commons vfs compatable path to the file.

workspace_dir.usage=\
workspace_dir\n\
\u0020            no args

xml_format.usage=\
xml_format -f/--file <file> -w/--linewidth <linewidth> -i/--indent <indent>\n\
\u0020            -f/--file <file>\n\
\u0020              The xml file to validate.\n\
\u0020            -w/--linewidth <linewidth>\n\
\u0020              The maximum line width.\n\
\u0020            -i/--indent <indent>\n\
\u0020              The number of spaces to indent.

xml_validate.usage=\
xml_validate -p/--project <project> -f/--file <file>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project the file is in.\n\
\u0020            -f/--file <file>\n\
\u0020              The xml file to validate.\n\
\u0020            -s/--schema\n\
\u0020              When present, validate against the file's defined schema.

patch_revisions.usage=\
patch_revisions -f/--file <file>\n\
\u0020            -f/--file <file>\n\
\u0020              The vim script file to obtain revision numbers for.

patch_file.usage=\
patch_file -f/--file <file> -r/--revision <revision> -b/--basedir <basedir>\n\
\u0020            -f/--file <file>\n\
\u0020              The vim script file to update.\n\
\u0020            -r/--revision <revision>\n\
\u0020              The vim script file revision to update to.\n\
\u0020            -b/--basedir <basedir>\n\
\u0020              The base directory where the file will be written to.

archive_list.usage=\
archive_list -f/--file <file>\n\
\u0020            -f/--file <file>\n\
\u0020              The url of the archive to list the contents of.

archive_list_all.usage=\
archive_list_all -f/--file <file>\n\
\u0020            -f/--file <file>\n\
\u0020              The url of the archive to list the contents of.

archive_read.usage=\
archive_read -f/--file <file>\n\
\u0020            -f/--file <file>\n\
\u0020              The url of the archive file to view the contents of.
