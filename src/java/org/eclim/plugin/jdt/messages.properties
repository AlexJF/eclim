# Copyright (c) 2005 - 2006
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

java_search.indeterminate=You must specify a valid pattern or element search.

class.not.found=Class ''{1}'' not found in project ''{0}''.
type.not.found=Type ''{1}'' not found in project ''{0}''.
type.not.a.class=Type ''{0}'' is not a java class.

method.not.found=Method ''{1}'' not found in ''{0}''.
method.already.implemented=Method ''{2}'' from ''{1}'' already implemented in ''{0}''.

src.file.not.found=\
  Source file ''{0}'' not found in any of the project''s designated source\
  directories defined in the project''s .classpath file.

constructor.already.exists=Constructor already exists: ''{0}''.

field.not.found=No field found with name ''{0}'' in ''{1}''.
not.a.field=Element is not a field.
check.import=Check that you have imported the type and that it is spelled correctly.

error.not.found=No error found in ''{0}'' on line number {1}.

prototype.header=\
     /**\n\
\u0020* Prototype generated by eclim.\n\
\u0020*\n\
\u0020* If you have the source for this library you can optionally attached it\n\
\u0020* via the .classpath file for the current project.\n\
\u0020*/\n

classpath.variable.created=Created variable ''{0}''.
classpath.variable.deleted=Deleted variable ''{0}''.

ivy.repo.not.set=\
  The classpath variable ''{0}'' is not set.  Use :IvyRepo <path> to set it.

log4j.logger.name.invalid=No class or package found with name ''{0}''.
log4j.appender.name.invalid=No appender found with name ''{0}''.
log4j.level.name.invalid=Invalid level ''{0}''.

filter.not.found=No filter definition with name ''{0}'' defined.
servlet.not.found=No servlet definition with name ''{0}'' defined.

######### Setting Descriptions #########
org.eclim.java.logging.impl=Logging implementation to use.
org.eclim.java.validation.ignore.warnings=\
  Whether or not to ignore warnings when validating java source files (true|false).

org.eclim.java.doc.version=\
  The value to use for the @version tag on class javadocs.

org.eclim.java.junit.command=\
  The command used to run junit tests.\n\
  Supports following placeholders:\n\
  <testcase>: path separated name of the test case.  Ex. org/test/SomeTest\n\
  <testcase_class>: fully qualified class name of the test case.  Ex. org.test.SomeTest
org.eclim.java.junit.output_dir=\
  The directory where your JUnit test results are written to.\n\
  Supports <project> placeholder for current project's root directory.
org.eclim.java.junit.src_dir=\
  The directory where your JUnit test cases are located.\n\
  Supports <project> placeholder for current project's root directory.

org.eclipse.jdt.core.compiler.source=\
  Java version to keep source code compatable with.


######### Command options #########
java_src_update.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  OPTIONAL v validate NOARG
java_src_exists.options=\
  REQUIRED f file ARG,\
  OPTIONAL p project ARG
java_src_find.options=\
  REQUIRED c classname ARG,\
  OPTIONAL p project ARG
java_import.options=\
  REQUIRED n project ARG,\
  REQUIRED p pattern ARG,\
  OPTIONAL t type ARG
java_imports_unused.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG
java_search.options=\
  REQUIRED n project ARG,\
  OPTIONAL f file ARG,\
  OPTIONAL o offset ARG,\
  OPTIONAL l length ARG,\
  OPTIONAL p pattern ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL x context ARG,\
  OPTIONAL s scope ARG
java_docsearch.options=\
  REQUIRED n project ARG,\
  OPTIONAL f file ARG,\
  OPTIONAL o offset ARG,\
  OPTIONAL l length ARG,\
  OPTIONAL p pattern ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL x context ARG,\
  OPTIONAL s scope ARG
java_complete.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  REQUIRED o offset ARG,\
  REQUIRED l layout ARG
java_correct.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  REQUIRED l line ARG,\
  REQUIRED o offset ARG,\
  OPTIONAL a apply ARG
java_impl.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  OPTIONAL o offset ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL s superType ARG,\
  OPTIONAL m methods ARG
java_bean_properties.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  REQUIRED o offset ARG,\
  REQUIRED r properties ARG,\
  REQUIRED t type ARG,\
  OPTIONAL i indexed NOARG
java_junit_impl.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  OPTIONAL o offset ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL b baseType ARG,\
  OPTIONAL s superType ARG,\
  OPTIONAL m methods ARG
java_delegate.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  OPTIONAL o offset ARG,\
  OPTIONAL t type ARG,\
  OPTIONAL s superType ARG,\
  OPTIONAL m methods ARG
java_constructor.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  REQUIRED o offset ARG,\
  OPTIONAL r properties ARG
java_regex.options=\
  REQUIRED f file ARG,\
  OPTIONAL t type ARG
java_class_prototype.options=\
  REQUIRED p project ARG,\
  REQUIRED c classname ARG
javadoc_comment.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG,\
  REQUIRED o offset ARG
java_classpath_variables.options=
java_classpath_variable_create.options=\
  REQUIRED n name ARG,\
  REQUIRED p path ARG
java_classpath_variable_delete.options=\
  REQUIRED n name ARG
log4j_validate.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG
webxml_validate.options=\
  REQUIRED p project ARG,\
  REQUIRED f file ARG

######### Usage Strings #########
java_search.usage=\
java_search -n project <project> (-f/--file <file> -o/--offset <offset>\n\
\u0020       -l/--length <length> | -p/--pattern <pattern> -t/--type <type>)\n\
\u0020       -x/--context <context> [-s/--scope <scope>]\n\
\u0020            -n/--project <project>\n\
\u0020              The name of the project the search is being executed in.\n\
\u0020            -f/-file <file>\n\
\u0020              The file where the search is originating from.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offet in the file where the search\n\
\u0020              is orignating from.\n\
\u0020            -l/--length <offset>\n\
\u0020              The length of the current element in the file where\n\
\u0020              the search is originating from.\n\
\u0020            -p/--pattern <pattern>\n\
\u0020              Pattern to search for.\n\
\u0020            -t/--type <type>\n\
\u0020              The type of element to search for, where the\n\
\u0020              possible types are:\n\
\u0020                [annotation|class|classOrEnum|classOrInterface|\n\
\u0020                 constructor|enum|field|interface|method|package|type]\n\
\u0020            -x/--context <context>\n\
\u0020              The context of the search, where the possible\n\
\u0020              contexts include:\n\
\u0020                [all|declarations|implementors|references]\n\
\u0020            -s/--scope <scope>\n\
\u0020              The scope of the search, where the possible\n\
\u0020              scopes include:\n\
\u0020                [all|project|type]

java_import.usage=\
java_import -n/--project <project> -p/--pattern <pattern> [-t/--type <type>]\n\
\u0020            -n/--project <project>\n\
\u0020              The name of the project the search is being executed in.\n\
\u0020            -p/--pattern <pattern>\n\
\u0020              Element to import (typically a class name).\n\
\u0020            -t/--type <type>\n\
\u0020              Not currently used (will be specific to JSE 1.5)\n\

java_imports_unused.usage=\
java_imports_unused -p/--project <project> -f/--file <file>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project the file belongs to.\n\
\u0020            -f/--file <file>\n\
\u0020              The file to find unused imports in.

java_complete.usage=\
java_complete -p/--project <project> -f/--file <file> -o/--offset <offset>\n\
\u0020       -l/--layout standard|compact\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The file to request code completion for.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.\n\
\u0020            -l/--layout <layout>\n\
\u0020              The completion layout to use (standard | compact).

java_correct.usage=\
java_correct -p/--project <project> -f/--file <file>\n\
\u0020       -l/--line <line> -o/--offset <offset> [-a/--apply <apply>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The file to request code correction for.\n\
\u0020            -l/--line <line>\n\
\u0020              The line in the file where the error occurs.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file where the error occurs.\n\
\u0020            -a/--apply <apply>\n\
\u0020              The index of the correction proposal to apply (0 based).

java_src_update.usage=\
java_src_update -p/--project <project> -f/--file <file> [-v/--validate]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The path to the file to update.\n\
\u0020            -v/--validate\n\
\u0020              Validate the src file and report problems.

java_src_exists.usage=\
java_src_exists [-p/--project <project>] -f/--file <file>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The path to the file (relative to the file's src\n\
\u0020              dir).

java_src_find.usage=\
java_src_find [-p/--project <project>] -c/--classname <classname>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -c/--classname <classname>\n\
\u0020              The class name to find the source for.

java_impl.usage=\
java_impl -p/--project <project> -f/--file <file> [-o/--offset <offset>]\n\
\u0020       -t/--type <superType> [-m/--methods <methods>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The current file.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.  Used to determine\n\
\u0020              if inserting methods for an inner class or not.\n\
\u0020            -t/--type <type>\n\
\u0020              The type to insert the method(s) into.\n\
\u0020            -s/--superType <superType>\n\
\u0020              The super type to implement the method(s) from.\n\
\u0020            -m/--method <method>\n\
\u0020              If supplied, the method to implement.

java_bean_properties.usage=\
java_bean_properties -p/--project <project> -f/--file <file>\n\
\u0020        -r/--properties <properties> -t/--type <type>\n\
\u0020        -i/--indexed\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The current file.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.  Used to determine\n\
\u0020              if inserting methods for an inner class or not.\n\
\u0020            -r/--properties <properties>\n\
\u0020              Comma seperated list of properties to generate\n\
\u0020              methods for.\n\
\u0020            -t/--type <type>\n\
\u0020              The type of methods to generate where the\n\
\u0020              possible types are:\n\
\u0020                [getter|setter|getter_setter]\n\
\u0020            -i/--indexed\n\
\u0020              When supplied, signals that indexed getters and setters\n\
\u0020              should be created for array properties.

java_junit_impl.usage=\
java_junit_impl -p/--project <project> -f/--file <file> [-o/--offset <offset>]\n\
\u0020       -b/--baseType <baseType> -t/--type <superType>\n\
\u0020       [-m/--methods <methods>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The current junit file.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.  Used to determine\n\
\u0020              if inserting methods for an inner class or not.\n\
\u0020            -t/--type <type>\n\
\u0020              The type to insert the method(s) into.\n\
\u0020            -b/--baseType <baseType>\n\
\u0020              The base type (class to be tested) to implement test\n\
\u0020              methods for.\n\
\u0020            -s/--superType <superType>\n\
\u0020              The super type to implement the method(s) from.\n\
\u0020            -m/--method <method>\n\
\u0020              If supplied, the method to implement.

java_delegate.usage=\
java_delegate -p/--project <project> -f/--file <file> [-o/--offset <offset>]\n\
\u0020       -t/--type <superType> [-m/--methods <methods>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The current junit file.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.  Used to determine\n\
\u0020              if inserting methods for an inner class or not.\n\
\u0020            -t/--type <type>\n\
\u0020              The type to insert the method(s) into.\n\
\u0020            -s/--superType <superType>\n\
\u0020              The super type to implement the method(s) from.\n\
\u0020            -m/--method <method>\n\
\u0020              If supplied, the method to implement.

java_constructor.usage=\
java_constructor -p/--project <project> -f/--file <file>\n\
\u0020       [-r/--properties <properties>]\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The current file.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.  Used to determine\n\
\u0020              if inserting constructor for an inner class or not.\n\
\u0020            -r/--properties <properties>\n\
\u0020              Comma seperated list of properties to use as arguments\n\
\u0020              in generated constructor.\n\

java_regex.usage=\
java_regex -f/--file <file> [-t/--type <type>]\n\
\u0020            -f/--file <file>\n\
\u0020              The regex file.\n\
\u0020            -t/--type <type>\n\
\u0020              The regex evaluation type to use.\n\
\u0020                file: evaluate the whole file against the regex at once.\n\
\u0020                line: evaluate each line against the regex individually.\n\

java_class_prototype.usage=\
java_class_prototype -p/--project <project> -c/--classname <classname>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -c/--classname <classname>\n\
\u0020              The fully qualified classname to generate a prototype of.

javadoc_comment.usage=\
javadoc_comment -p/--project <project> -f/--file <file> -o/--offset <offset>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the src file.\n\
\u0020            -f/--file <file>\n\
\u0020              The current file.\n\
\u0020            -o/--offset <offset>\n\
\u0020              The character offset in the file.

java_classpath_variables.usage=\
java_classpath_variables\n\
\u0020            no args

java_classpath_variable_create.usage=\
java_classpath_variable_create -n/--name <name> -p/--path <path>\n\
\u0020            -n/--name <name>\n\
\u0020              The variable name.\n\
\u0020            -p/--path <path>\n\
\u0020              The path to assign to the variable.

java_classpath_variable_delete.usage=\
java_classpath_variable_delete -n/--name <name>\n\
\u0020            -n/--name <name>\n\
\u0020              The variable name.

log4j_validate.usage=\
log4j_validate -p/--project <project> -f/--file <file>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the file.\n\
\u0020            -f/--file <file>\n\
\u0020              The file to validate.

webxml_validate.usage=\
webxml_validate -p/--project <project> -f/--file <file>\n\
\u0020            -p/--project <project>\n\
\u0020              The name of the project containing the file.\n\
\u0020            -f/--file <file>\n\
\u0020              The file to validate.
