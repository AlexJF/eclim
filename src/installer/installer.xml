<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2005 - 2010  Eric Van Dewoestine

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<!--
  - Installer build file that is executed upon installation.
  -->
<project name="eclim_installer" default="installer"
    xmlns:formic="antlib:org.formic.ant"
    xmlns:eclim="antlib:org.eclim.installer.ant">

  <property file="build.properties"/>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
  <taskdef name="for" classname="net.sf.antcontrib.logic.ForTask"/>

  <!--
    - Standard target to install the app.
    - Note: Must be named "installer".
    -->
  <target name="installer">
    <formic:installer property="install.complete"
        resources="resources.install" steps="resources.steps">
      <formic:path name="main">
        <formic:step name="welcome"/>
        <formic:step name="license"/>
        <formic:step name="eclipse"/>
        <formic:step name="vim"/>
        <formic:step name="requirements">
          <property name="provider"
              value="org.eclim.installer.step.RequirementProvider"/>
        </formic:step>
        <formic:step name="featureList">
          <property name="provider"
              value="org.eclim.installer.step.FeatureProvider"/>
        </formic:step>
        <formic:step name="summary"/>
        <formic:branch path="branch_eclipse_plugins">
          <or>
            <!-- seperate plugins dest may need to be added as a new site -->
            <and>
              <not> <os family="windows"/> </not>
              <not>
                <formic:equals arg1="eclipse.local" arg2="eclipse.home"/>
              </not>
            </and>
            <formic:istrue value="featureList.cdt"/>
            <formic:istrue value="featureList.dltk"/>
            <formic:istrue value="featureList.jdt"/>
            <formic:istrue value="featureList.wst"/>
          </or>
        </formic:branch>
        <formic:step name="install"/>
        <formic:step name="finished"/>
      </formic:path>

      <formic:path name="branch_eclipse_plugins">
        <formic:step name="eclipsePlugins"/>
      </formic:path>
    </formic:installer>
  </target>

  <!--
    - Simple validation mostly intended as a sanity check for unattended
    - installs.
    -->
  <target name="validate">
    <if>
      <not>
        <and>
          <isset property="eclipse.home"/>
          <isset property="vim.files"/>
        </and>
      </not>
      <then>
        <fail>
          One or more required properties have not been set:

          eclipse.home:  ${eclipse.home}
          vim.files:     ${vim.files}
        </fail>
      </then>
    </if>
  </target>

  <!--
    - Task that will run at the end of the wizard process to perform user
    - defined task after gathering info from the user via the wizard.
    - Note: Must be named "install".
    -->
  <target name="install" depends="validate">
    <!-- default value of eclipse.local to that of eclipse.home -->
    <property name="eclipse.local" value="${eclipse.home}"/>

    <if>
      <os family="windows"/>
      <then>
        <property name="eclim.plugins" value="${eclipse.home}/plugins"/>
      </then>
      <else>
        <property name="eclim.plugins" value="${eclipse.local}/plugins"/>
      </else>
    </if>

    <property name="eclim.home"
        value="${eclim.plugins}/org.eclim_${eclim.version}"/>

    <!-- shutdown any running instance of eclimd -->
    <eclim:shutdown/>

    <mkdir dir="${eclim.plugins}"/>

    <!-- remove old files -->
    <antcall target="clean"/>

    <!-- generate excludes file based on components user chose not to install -->
    <touch file="install.excludes"/>
    <eclim:installexcludes destfile="install.excludes"/>

    <!-- install eclipse plugins -->
    <if>
      <os family="windows"/>
      <then>
        <unzip src="org.eclim_${eclim.version}.zip"
            dest="${eclim.plugins}">
          <patternset includes="**/*" excludesfile="${basedir}/install.excludes"/>
        </unzip>
        <move todir="${eclipse.home}">
          <fileset dir="${eclim.plugins}/org.eclim_${eclim.version}/bin"
              includes="eclim,eclim.bat,eclim.cmd,eclimd.bat,eclimd.cmd,ng.exe"/>
        </move>
      </then>
      <else>
        <untar src="${basedir}/org.eclim_${eclim.version}.tar.gz"
            dest="${eclim.plugins}" compression="gzip">
          <patternset includes="**/*" excludesfile="${basedir}/install.excludes"/>
        </untar>

        <replace
            file="${eclim.plugins}/org.eclim_${eclim.version}/bin/native/linux/eclimd.desktop"
            token="$${eclipse.home}" value="${eclipse.local}"/>
        <replace
            file="${eclim.plugins}/org.eclim_${eclim.version}/bin/native/linux/eclimd"
            token="$${eclipse.home}" value="${eclipse.local}"/>

        <!--
          - hard code the eclipse home for people that install plugins outside
          - of the ecilpse home.
          -->
        <if>
          <not>
            <contains string="${eclim.plugins}" substring="${eclipse.home}"/>
          </not>
          <then>
            <replace file="${eclim.plugins}/org.eclim_${eclim.version}/bin/eclimd"
                token="#$${eclipse.home}"
                value="ECLIM_ECLIPSE_HOME=&quot;${eclipse.home}&quot;"/>
          </then>
        </if>

        <chmod perm="755">
          <fileset dir="${eclim.plugins}/org.eclim_${eclim.version}/bin">
            <include name="eclim"/>
            <include name="eclimd"/>
            <include name="native/**/*"/>
          </fileset>
        </chmod>

        <!-- java symlink support sucks, especially if the link is broken -->
        <exec executable="rm"> <arg line="${eclipse.local}/eclim"/> </exec>
        <exec executable="rm"> <arg line="${eclipse.local}/eclimd"/> </exec>

        <!-- formic doesn't include optional ant tasks (symlink in this case) -->
        <exec executable="ln" dir="${eclipse.local}">
          <arg line="-s ${eclim.plugins}/org.eclim_${eclim.version}/bin/eclim ."/>
        </exec>
        <exec executable="ln" dir="${eclipse.local}">
          <arg line="-s ${eclim.plugins}/org.eclim_${eclim.version}/bin/eclimd ."/>
        </exec>

        <exec executable="make" failonerror="true"
            dir="${eclim.home}/src/nailgun"/>
        <move file="${eclim.home}/src/nailgun/ng" todir="${eclim.home}/bin"/>
      </else>
    </if>

    <replace
        file="${eclim.plugins}/org.eclim_${eclim.version}/plugin.properties"
        token="$${vim.files}" value="${vim.files}"/>

    <!-- determine if current os supports emebedding gvim. -->
    <if>
      <os family="mac"/>
      <then> <property name="eclim.gvim.embed" value="false"/> </then>
      <else> <property name="eclim.gvim.embed" value="true"/> </else>
    </if>

    <!-- default gvim location to the empty value -->
    <property name="eclim.gvim" value=""/>

    <replace dir="${eclim.plugins}/org.eclim.vimplugin_${eclim.version}"
        includes="plugin.properties">
      <replacefilter token="$${eclim.gvim}" value="${eclim.gvim}"/>
      <replacefilter token="$${eclim.gvim.embed}" value="${eclim.gvim.embed}"/>
    </replace>

    <!-- install vim plugins -->
    <unjar src="eclim_vim_${eclim.version}.jar" dest="${vim.files}">
      <patternset includes="**/*" excludesfile="${basedir}/install.excludes"/>
    </unjar>

    <replace file="${vim.files}/eclim/plugin/eclim.vim">
      <replacefilter token="&quot;$${vim.eclim.home}&quot;"
          value="let g:EclimHome = '${eclim.home}'"/>
      <replacefilter token="&quot;$${vim.eclipse.home}&quot;"
          value="let g:EclimEclipseHome = '${eclipse.local}'"/>
    </replace>

    <antcall target="cleanup"/>
  </target>

  <!--
    - Task to remove old eclim files.
    -->
  <target name="clean">
    <!-- remove eclipse plugins -->
    <delete includeemptydirs="true">
      <fileset dir="${eclim.plugins}" includes="org.eclim*/**/*"/>
      <dirset dir="${eclim.plugins}" includes="org.eclim*"/>
    </delete>

    <!-- remove old vim files
         (when altering includes/excludes, update VimStep.proceed) -->
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${vim.files}/eclim">
        <include name="**/*"/>
        <exclude name="after/**/*"/>
        <exclude name="resources/**/*"/>
      </fileset>
    </delete>
  </target>

  <!--
    - Task that will run if the wizard was canceled, where any necessary
    - cleanup can occur.
    - Note: Must be named "canceled".
    -->
  <target name="canceled">
    <echo>Installation canceled.</echo>
    <antcall target="cleanup"/>
  </target>

  <!--
    - Cleanup any installer files when installer has completed or has been canceled.
    -->
  <target name="cleanup">
    <delete dir="${eclipse.local}/plugins/org.eclim.installer_${eclim.version}"/>
  </target>

</project>
