<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
  "http://forrest.apache.org/dtd/document-v20.dtd">
<!--
 Author: Eric Van Dewoestine
-->

<document>
  <header>
    <title>Features</title>
    <authors>
      <person name="Eric Van Dewoestine" email="ervandew@yahoo.com"/>
    </authors>
  </header>
  <body>
    <p>
      The following is a list of eclim features with much more still yet to
      come.<br/>
      For more details please see
      <a href="vim/index.html">the vim integration docs</a>.
    </p>

    <p>
      <strong>Eclipse Projects</strong>
    </p>
    <ul>
      <li>Create, update, and delete eclipse projects.</li>
      <li>Easily manage eclipse .classpath files.</li>
      <li>
        Quickly and easily manage settings globally or on a project basis.
      </li>
    </ul>

    <p>
      <strong>Java Integration</strong>
    </p>
    <ul>
      <li>
        Automatic source code validation (w/ visual marking of errors and
        warnings).
      </li>
      <li>Context sensitive code completion.</li>
      <li>Code correction suggestions with option to apply a suggestion.</li>
      <li>Class constructor generation.</li>
      <li>Java Bean getter and setter generation.</li>
      <li>Generation of delegate methods.</li>
      <li>Java source and java doc searching capabilities.</li>
      <li>Generate stub methods from implemented interfaces or superclasses.</li>
      <li>Generate stub methods for junit testing.</li>
      <li>Quickly clean and sort imports and easily import new classes.</li>
      <li>
        Automatic generation of logging initialization code, upon first usage
        of a logger.
      </li>
    </ul>

    <p>
      <strong>Xml Integration</strong>
    </p>
    <ul>
      <li>
        Automatic validation (w/ visual marking of errors and warnings).
      </li>
    </ul>
  </body>
</document>
