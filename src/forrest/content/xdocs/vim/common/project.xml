<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2005 - 2006

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
  "http://forrest.apache.org/dtd/document-v20.dtd">
<!--
 Author: Eric Van Dewoestine
-->

<document>
  <header>
    <title>Eclipse Projects</title>
    <authors>
      <person name="Eric Van Dewoestine" email="ervandew@yahoo.com"/>
    </authors>
  </header>
  <body>
    <p>
      The core concept in most IDEs is the that of a project, and eclipse is no
      different.  Since a project must exist before you can perform any of the
      more interesting tasks, eclim provides a set of commands to create and
      manage projects from within vim.
    </p>
    <note>
      For the commands below that accept a project name as an argument, you may
      use vim's command line completion to complete the project name.
      <br/>
      <code>:ProjectSettings a_p&lt;Tab&gt;</code>
      <br/>
      <code>:ProjectSettings a_project</code>
    </note>
    <ul>
      <li>
        <anchor id="ProjectCreate"/>
        <strong>:ProjectCreate</strong> &lt;folder&gt; [&lt;project_dependencies&gt;]
        <br/>
        Creates a project at the supplied folder name.  If the project depends
        on other projects, you can specify the names of those projects separated
        by space.
        <source>
          :ProjectCreate ~/projects/a_project
          :ProjectCreate ~/projects/a_project another_project yet_another_project
        </source>
      </li>
      <li>
        <anchor id="ProjectList"/>
        <strong>:ProjectList</strong><br/>
        Simply echos a list of available projects.
      </li>
      <li>
        <anchor id="ProjectSettings"/>
        <strong>:ProjectSettings</strong> [&lt;project&gt;]<br/>
        Opens a window with the project's available settings.<br/>
        If a project name is supplied with this command, then the settings for
        that project are opened.<br/>
        If no project name is supplied, and the current file is in a project
        directory, then the settings for the current project will be opened.
        <br/>
        In the resulting window you can modify the values and save the changes
        by simply writing the file in the usual vim manner (:w).<br/>
        The format of the buffer is in the standard properties file format as
        supported by java, so all the same rules apply when editing.<br/>
        You can refer to the <a href="../settings.html">settings</a>
        documentation for a description of the available settings.
      </li>
      <li>
        <anchor id="ProjectDelete"/>
        <strong>:ProjectDelete</strong> &lt;project&gt;<br/>
        Deletes the project with the specified name.
      </li>
      <li>
        <anchor id="ProjectRefresh"/>
        <strong>:ProjectRefresh</strong> [&lt;project&gt; &lt;project&gt; ...]
        <br/>
        Refreshes all, or the supplied list of named projects by synchronizing
        each project against the current files on disk.  Useful when files may
        have been added, removed, or updated by a secondary application, like a
        version control system (cvs, subversion, etc).
      </li>
      <li>
        <anchor id="ProjectOpen"/>
        <strong>:ProjectOpen</strong> &lt;project&gt;<br/>
        Opens a closed project.
      </li>
      <li>
        <anchor id="ProjectClose"/>
        <strong>:ProjectClose</strong> &lt;project&gt;<br/>
        Closes a project.  According to eclipse documentation, closing unused
        projects can reduce the amount of memory used, and may improve
        performance when building projects.
        <note>
          Searching for an element in a closed project will yield no results.
        </note>
      </li>
    </ul>
  </body>
</document>
