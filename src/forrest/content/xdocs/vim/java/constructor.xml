<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2005 - 2006

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
  "http://forrest.apache.org/dtd/document-v20.dtd">
<!--
 Author: Eric Van Dewoestine
-->

<document>
  <header>
    <title>Class Constructor Generation</title>
    <authors>
      <person name="Eric Van Dewoestine" email="ervandew@yahoo.com"/>
    </authors>
  </header>
  <body>
    <p>
      <strong>:JavaConstructor</strong> is a command that will create either an
      empty constructor, or one that takes any selected fields as arguments.
    </p>
    <p>
      For example if you have the following class:
    </p>
    <source>
      public class Foo
      {
        private int id;
        private String name;
      }
    </source>
    <p>
      If you were to select the range containing the 'id' and 'name' fields
      and issue <strong>:JavaConstructor</strong>, then you would end up with
      the following code.
    </p>
    <source>
      public class Foo
      {
        private int id;
        private String name;

        /**
         * Constructs a new instance.
         *
         * @param id The id for this instance.
         * @param name The name for this instance.
         */
        public Foo (int id, String name)
        {
          this.id = id;
          this.name = name;
        }
      }
    </source>
    <p>
      If you issue the command with no fields selected, then a default empty
      constructor is created.
    </p>
    <note>
      The insertion of constructors is done externally with eclipse and with
      that comes a couple <a href="../external_editing.html">caveats</a>.
    </note>
  </body>
</document>
