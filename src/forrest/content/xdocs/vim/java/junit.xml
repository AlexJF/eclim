<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
  "http://forrest.apache.org/dtd/document-v20.dtd">
<!--
 Author: Eric Van Dewoestine
-->

<document>
  <header>
    <title>JUnit</title>
    <authors>
      <person name="Eric Van Dewoestine" email="ervandew@yahoo.com"/>
    </authors>
  </header>
  <body>
    <p>
      Currently the junit functionality of eclim consists only of stub
      generation for test methods similar to the
      <a href="impl.html">method override / impl</a> functionality provided for
      non-test-case classes.  The only difference is that instead of
      <strong>:JavaImpl</strong>, you use <strong>:JUnitImpl</strong> to open
      the window of possible methods to implement.
    </p>
    <p>
      To determine what class the current test case is for, eclim expects that
      the standard naming convention for test cases is followed, where the test
      case has the same fully qualified class name as the target class with a
      'Test' suffix.<br/>
      For a class <code>org.foo.bar.Baz</code><br/>
      The exepected test case would be named <code>org.foo.bar.BazTest</code>.
      <br/>
      So when invoking <strong>:JUnitImpl</strong> from within
      <code>org.foo.bar.BazTest</code>, eclim would look for the class
      <code>org.foo.bar.Baz</code> and generate a list of methods to test from
      it.
    </p>
    <p>
      When you hit &lt;enter&gt; on the method to add, if that method belongs
      to a type in the hierarchy for the class being tested, then the
      corresponding <code>testMethodName</code> will be inserted, otherwise a
      regular overriding stub will be generated.
    </p>
    <note>
      The junit.jar file must be in your project's classpath for eclim to
      display possible methods to override in the junit test-case hierarchy.
    </note>
  </body>
</document>
