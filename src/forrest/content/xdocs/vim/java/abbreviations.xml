<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2005 - 2006

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
  "http://forrest.apache.org/dtd/document-v20.dtd">
<!--
 Author: Eric Van Dewoestine
-->

<document>
  <header>
    <title>Abbreviations</title>
    <authors>
      <person name="Eric Van Dewoestine" email="ervandew@yahoo.com"/>
    </authors>
  </header>
  <body>
    <p>
      Eclim provides the following Vim abbreviations:
    </p>
    <ul>
      <li>
        <strong>fori</strong><br/>
        <source>
          for (int ii = 0; ii &lt; ${array}.length; ii++){
          }
        </source>
      </li>
      <li>
        <strong>forI</strong><br/>
        <source>
          for (Iterator ii = ${col}.iterator(); ii.hasNext();){
          }
        </source>
      </li>
      <li>
        <strong>fore</strong><br/>
        <source>
          for (${object} ${var} : ${col}){
          }
        </source>
      </li>
    </ul>
    <p>
      When editing a java source file simply enter the abbreviation while in
      insert mode, followed by a space or &lt;ESC&gt; and the corresponding
      code above will be added for you.
    </p>
    <p>
      You will also notice that the code above has replacement variables in the
      form of <em>${variable}</em>.  When the abbreviation is expanded, eclim
      will remove the first variable and position the cursor at that position so
      that you can fill in the appropriate value.  Additional values, if any,
      can be replaced by using the <code>FillTemplate</code> funtion (please see
      the <a href="../mappings.html#java">suggested mappings</a> for more
      information). The variable will be removed and the cursor placed in its
      position for you to again enter the appropriate value in its place.
    </p>
    <p>
      For example, to use the for each (or enhanced for) abbreviation above to
      iterate over an array of Date objects stored in a variable "dates", you
      would simply (assuming you mapped the template replacement to &lt;Tab&gt;):
    </p>
    <ol>
      <li>Enter insert mode.</li>
      <li>Type "fore" followed by a space.</li>
      <li>Type "Date", then &lt;ESC&gt;.</li>
      <li>Hit &lt;Tab&gt;.</li>
      <li>Type "date", then &lt;ESC&gt;.</li>
      <li>Hit &lt;Tab&gt; again.</li>
      <li>Type "dates", then &lt;ESC&gt;.</li>
    </ol>
    <p>
      After that sequence you would have the following code.
    </p>
    <source>
      for (Date date : dates){
      }
    </source>
    <p>
      With the for each example you will only save yourself a few keystrokes,
      but with the other for loop abbreviations you can save many more.
    </p>
  </body>
</document>
