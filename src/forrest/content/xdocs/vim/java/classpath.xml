<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
  "http://forrest.apache.org/dtd/document-v20.dtd">
<!--
 Author: Eric Van Dewoestine
-->

<document>
  <header>
    <title>Eclipse Classpath Editing</title>
    <authors>
      <person name="Eric Van Dewoestine" email="ervandew@yahoo.com"/>
    </authors>
  </header>
  <body>
    <p>
      Source code completion, searching, auto imports, all rely on a properly
      configured classpath.  When you first create a project, a .classpath file
      is created in the project's root directory.  If you created the project on
      an existing code-base, eclim will attempt to setup the .classpath file with
      any source code directories or libraries in the project.
    </p>
    <p>
      Regardless of the state of your project you will at some point need to
      update the classpath.  To do so, simple edit the .classpath file with vim
      and make the necessary changes.  When you write the file, vim will issue a
      command to the eclim server to update the project's classpath.
    </p>
    <p>
      In addition to allowing you to directly edit the .classpath file, eclim
      provides a few commands to ease the creation of new classpath entries.
    </p>
    <ul>
      <li>
        :NewSrcEntry - Adds a new entry for a source code directory relative to
        the project's root directory.<br/>
        <source>
          <![CDATA[
          <classpathentry kind="src" path="src/java"/>
          ]]>
        </source>
      </li>
      <li>
        :NewProjectEntry - Adds a new entry for a dependency on another project.
        The project path is always /projectname.
        <source>
          <![CDATA[
          <classpathentry exported="true" kind="src" path="/toolkit"/>
          ]]>
        </source>
      </li>
      <li>
        :NewJarEntry - Adds a new entry for a jar file dependency.  If the jar
        file is not in a folder under the project root, you must use an absolute
        path (apparent limitation with eclipse).  When adding the template, this
        command also adds the necessary (although commented out) elements and
        attributes to set the location of the jar's source code and javadocs.
        <source>
          <![CDATA[
          <classpathentry kind="lib" path="lib/hibernate-3.0.jar">
            <!--
              sourcepath="<path>">
            -->
            <!--
            <attributes>
              <attribute value="file:<javadoc>" name="javadoc_location">
            </attributes>
            -->
          </classpath>
          ]]>
        </source>
      </li>
    </ul>
  </body>
</document>
