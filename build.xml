<?xml version="1.0" encoding="UTF-8"?>
<!--
 Author: Eric Van Dewoestine
-->
<project name="build" default="build" basedir=".">

  <property environment="env"/>
  <property file="src/ant/build.properties"/>

  <path id="ant-contrib-classpath">
    <pathelement location="src/ant/lib/ant-contrib-1.0b1.jar"/>
  </path>
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"
      classpathref="ant-contrib-classpath"/>
  <taskdef classname="net.sf.antcontrib.logic.For" name="for"
      classpathref="ant-contrib-classpath"/>

  <import file="src/ant/dist.xml"/>
  <import file="src/ant/docs.xml"/>
  <import file="src/ant/logger.xml"/>
  <import file="src/ant/patch.xml"/>
  <import file="src/ant/test.xml"/>

  <!-- exclude vim swap files -->
  <defaultexcludes add="**/*.swp"/>

  <!-- classpath -->
  <path id="classpath">
    <fileset dir="lib" includes="**/*.jar"/>
    <fileset dir="src/eclipse/plugins/" includes="*/lib/*.jar"/>
    <fileset dir="${eclipse.home}" includes="startup.jar"/>
    <fileset dir="${eclipse.home}/plugins"
        includes="**/*.jar" excludes="org.eclim*/**/*.jar"/>
  </path>

  <!--
    - Initialize the build.
    -->
  <target name="init">
    <mkdir dir="build/classes"/>
    <mkdir dir="build/dist"/>
  </target>

  <!--
    - Main target for building and deploying plugins.
    -->
  <target name="build" depends="init"
      description="Builds eclim and deploys it to the local eclipse instance.">

    <property name="deprecation" value="false"/>
    <property name="compilerargs" value=""/>
    <javac destdir="build/classes" debug="on" optimize="false"
        target="${javac.target}" source="${javac.target}"
        deprecation="${deprecation}">
      <compilerarg line="${compilerargs}"/>
      <src path="src/java"/>
      <include name="**/*.java"/>
      <exclude name="**/pydev/**/*.java"/>
      <classpath refid="classpath"/>
    </javac>

    <mkdir dir="build/dist/org.eclim/lib"/>

    <!-- eclim jar file -->
    <jar jarfile="build/dist/org.eclim/eclim.jar">
      <fileset dir="build/classes">
        <include name="org/eclim/**/*.class"/>
        <include name="org/eclipse/**/*.class"/>
        <exclude name="org/eclim/misc/**/*.class"/>
        <exclude name="org/eclim/plugin/*/**/*.class"/>
      </fileset>
      <fileset dir="src/java">
        <include name="org/eclim/**/*"/>
        <include name="org/eclipse/**/*"/>
        <exclude name="org/eclim/misc/"/>
        <exclude name="org/eclim/misc/*/"/>
        <exclude name="org/eclim/misc/**/*.class"/>
        <exclude name="org/eclim/plugin/*/"/>
        <exclude name="org/eclim/plugin/*/**/*"/>
        <exclude name="**/package.html"/>
        <exclude name="**/*.java"/>
      </fileset>
    </jar>

    <!-- eclim misc jar file -->
    <jar jarfile="build/dist/org.eclim/eclim-misc.jar">
      <fileset dir="build/classes">
        <include name="org/eclim/misc/**/*.class"/>
      </fileset>
      <fileset dir="src/java">
        <include name="org/eclim/misc/*/**/*"/>
        <exclude name="**/package.html"/>
        <exclude name="**/*.java"/>
      </fileset>
    </jar>

    <copy todir="build/dist/org.eclim">
      <fileset dir="." includes="src/nailgun/**/*"/>
    </copy>

    <touch mkdirs="true" file="build/dist/org.eclim/log/.keep"/>
    <copy todir="build/dist/org.eclim/bin">
      <fileset dir="src/shell" includes="**/*"/>
    </copy>

    <antcall target="plugin">
      <param name="plugin.name" value=""/>
    </antcall>

    <!-- determine what plugins exist (other than the core) -->
    <path id="plugin.dirs">
      <dirset dir="build/classes/org/eclim/plugin" includes="*" excludes="pydev"/>
    </path>
    <property name="plugins" refid="plugin.dirs"/>
    <propertyregex property="plugins" override="true"
        input="${plugins}" regexp="/*?[a-zA-Z0-9-]*?/" replace=""/>
    <foreach list="${plugins}" target="plugin" delimiter=":"
        inheritAll="true" param="plugin.name" trim="true"/>

    <!-- patch nailgun jar file -->
    <jar jarfile="build/dist/org.eclim/lib/nailgun-0.7.1.jar" update="true">
      <fileset dir="build/classes">
        <include name="com/martiansoftware/nailgun/**/*.class"/>
      </fileset>
    </jar>

    <!-- patch tagsoup jar file -->
    <jar jarfile="build/dist/org.eclim.wst/lib/tagsoup-1.2.jar" update="true">
      <fileset dir="build/classes">
        <include name="org/ccil/cowan/tagsoup/**/*.class"/>
      </fileset>
    </jar>

    <!-- deploy eclipse files -->
    <antcall target="plugin.deploy">
      <param name="plugin.name" value=""/>
    </antcall>
    <foreach list="${plugins}" target="plugin.deploy" delimiter=":"
        inheritAll="true" param="plugin.name" trim="true"/>
    <chmod dir="${eclipse.home}/plugins/org.eclim_${eclim.version}/bin"
      includes="**/*" excludes="*.sed" perm="ugo+x"/>

    <!-- deploy vim files -->
    <mkdir dir="${vim.files}/eclim"/>
    <copy todir="${vim.files}/plugin"
        file="src/vim/plugin/eclim.vim" overwrite="true"/>
    <sync todir="${vim.files}/eclim">
      <fileset dir="src/vim/eclim" includes="**/*"/>
      <preserveintarget>
        <include name="after/**/*.vim"/>
        <include name="resources/**/*"/>
      </preserveintarget>
    </sync>

  </target>

  <!--
    - Create the jar file for a plugin
    -->
  <target name="plugin">
    <echo> building plugin: ${plugin.name} </echo>
    <if>
      <not><equals arg1="${plugin.name}" arg2=""/></not>
      <then>
        <mkdir dir="build/dist/org.eclim.${plugin.name}"/>
        <jar jarfile="build/dist/org.eclim.${plugin.name}/eclim.${plugin.name}.jar">
          <fileset dir="build/classes">
            <include name="**/plugin/${plugin.name}/**/*.class"/>
          </fileset>
          <fileset dir="src/java">
            <include name="**/plugin/${plugin.name}/**/*"/>
            <exclude name="**/package.html"/>
            <exclude name="**/*.java"/>
          </fileset>
        </jar>
        <var name="plugin.name" value=".${plugin.name}"/>
      </then>
    </if>
    <copy todir="build/dist/org.eclim${plugin.name}">
      <fileset dir="src/eclipse/plugins/org.eclim${plugin.name}" includes="**/*"/>
    </copy>

    <replace dir="build/dist/org.eclim${plugin.name}"
        includes="bin/**/*, about.html, plugin.properties, META-INF/MANIFEST.MF">
      <replacefilter token="$${eclim.version}" value="${eclim.version}"/>
      <replacefilter token="$${vim.files}" value="${vim.files}"/>
    </replace>

    <antcall target="plugin.lib.jars">
      <param name="plugin.name" value="${plugin.name}"/>
    </antcall>
  </target>

  <!--
    - Target responsible for building a list of jar files for the specified
    - plugin and updating its manifest accordingly.
    -->
  <target name="plugin.lib.jars">
    <!-- build list of jar files for main plugin's manifest. -->
    <if>
      <available file="build/dist/org.eclim${plugin.name}/lib"/>
      <then>
        <path id="lib.jars">
          <fileset dir="build/dist/org.eclim${plugin.name}/lib" includes="*"/>
        </path>
        <property name="lib.jars" refid="lib.jars"/>
        <propertyregex property="lib.jars" override="true"
            input="${lib.jars}" regexp=":" replace=","/>
        <propertyregex property="lib.jars" override="true"
            input="${lib.jars}" regexp="/.*?/lib/" replace="lib/"/>

        <replace dir="build/dist/org.eclim${plugin.name}"
            includes="META-INF/MANIFEST.MF">
          <replacefilter token="$${eclim.lib.jars}" value="${lib.jars}"/>
        </replace>

        <!--
          - separates lib entries onto new lines since the single line length of
          - the classpath entry seems to be limited.
          -->
        <replace dir="build/dist/org.eclim${plugin.name}"
            includes="META-INF/MANIFEST.MF">
          <replacetoken>,lib</replacetoken>
          <replacevalue>,
  lib</replacevalue>
        </replace>
      </then>
    </if>
  </target>

  <!--
    - Target to deploy a plugin to eclipse.
    -->
  <target name="plugin.deploy">
    <if>
      <not><equals arg1="${plugin.name}" arg2=""/></not>
      <then>
        <var name="plugin.name" value=".${plugin.name}"/>
      </then>
    </if>
    <sync todir="${eclipse.home}/plugins/org.eclim${plugin.name}_${eclim.version}">
      <fileset dir="build/dist/org.eclim${plugin.name}" includes="**/*"/>
    </sync>
  </target>

  <!--
    - Delete any generated artifacts of the build.
    -->
  <target name="clean" description="Deletes the build and dist directories.">
    <delete dir="build"/>
    <delete dir="dist"/>
  </target>

</project>
