<?xml version="1.0" encoding="UTF-8"?>
<!--
 Author: Eric Van Dewoestine
-->
<status>
  <developers>
    <person name="Eric Van Dewoestine" email="ervandew@yahoo.com" id="ervandew"/>
  </developers>

  <todo>
    <actions priority="high">
      <action context="junit" dev="ervandew">
        Create junit test harness for starting eclimd, running tests, and then
        stopping eclimd.
      </action>
    </actions>

    <actions priority="medium">
      <action context="windows" dev="ervandew">
        Use my BatchFileService.exe to create a Windows service for eclimd.
      </action>
      <action context="javadoc" dev="ervandew">
        Javadoc functionality.<br/>
        Eclipse has setting for a project's own javadocs... where is this
        stored (not in .project, or any of the .setting/, maybe in the
        workspace)?<br/>
        <code>org.eclipse.jdt.ui.JavaUI.getProjectJavadocLocation(IJavaProject)</code><br/>
        <code>org.eclipse.jdt.ui.JavaUI.setProjectJavadocLocation(IJavaProject, URL)</code>
      </action>
      <action context="searching" dev="ervandew">
        <p>
          Expand searching from non java source files (spring xml, hibernate
          xml, etc).<br/>
          Third party plugins may provide this functionality.
        </p>
      </action>
      <action context="refactoring" dev="ervandew">
        <ul>
          <li>Safe deletes. Check for references before deleting.</li>
          <li>Convert anonymous class into inner/outer class.</li>
          <li>Convert inner class to outer class.</li>
          <li>Extract interface.</li>
          <li>Method / Class / Field renaming.</li>
          <li>
            Push methods / fields up to superclass or down to subclass.
          </li>
          <li>Move types, methods, fields.</li>
        </ul>
      </action>
      <action context="delegate" dev="ervandew">
        Generate delegate methods for a field when wrapping that type.
        <br/>
        <source>
          public void add (Object _object)
          {
            list.add(_object);
          }
        </source>
      </action>
      <action context="junit" dev="ervandew">
        Junit integration.
        <ul>
          <li>Template for test case</li>
          <li>Run and view test results in a browser.</li>
          <li>
            When viewing a junit result file allow linking from stack trace
            elements.
          </li>
          <li>Functionality from my junit.vim plugin.</li>
        </ul>
      </action>
      <action context="content assist" dev="ervandew">
        <ul>
          <li>
            Generate anonymous class body, including all methods that need to be
            implemented, from the start of defining one (new Runnable())<br/>
            Eclipse Equiv: Ctrl+Space
          </li>
          <li>
            Create method from the call to one that does not yet exist or
            change method signature (add/remove parameters/agruments).<br/>
            Eclipse Equiv: Ctrl+1
          </li>
          <li>
            Create constructor from first few letters.
          </li>
          <li>
            Create new field to hold constructor argument.<br/>
            Eclipse Equiv: Ctrl+1
          </li>
          <li>
            Override method after typing first few characters.<br/>
            Eclipse Equiv: Ctrl+Space
          </li>
          <li>
            Add unimplemented methods (cursor on the class that implements an
            interface).<br/>
            Eclipse Equiv: Ctrl+1
          </li>
          <li>
            Auto surround method call that throws an exception w/ try/catch
            block or if surrounded and doesn't catch necessary exceptions,
            add those catch statements.<br/>
            Eclipse Equiv: Ctrl+1
          </li>
          <li>
            Auto cast object to new var within an if containing an instanceof
            call.<br/>
            Eclipse Equiv: Ctrl+1
          </li>
          <li>
            Wrap source block (selection) in do,if,for,try,while.<br/>
            Eclipse Equiv: Ctrl+1
          </li>
          <li>
            Guess arguments for a method call (may have to be configured in
            eclipse.
          </li>
        </ul>
      </action>
      <action context="eclipse_features" dev="ervandew">
        Read up on other default eclipse features that may be useful within vim.
        <ul>
          <li>
            <a href="http://help.eclipse.org/help31/index.jsp?topic=/org.eclipse.jdt.doc.user/tips/jdt_tips.html">JDT Tips</a>
          </li>
          <li>
            <a href="http://help.eclipse.org/help31/index.jsp?topic=/org.eclipse.jdt.doc.user/whatsNew/jdt_whatsnew.html">JDT What's New</a>
          </li>
        </ul>
      </action>
    </actions>

    <actions priority="low">
      <action context="installer" dev="ervandew">
        Create installer
        <ul>
          <li>Verify jdk, vim, and eclipse versions.</li>
          <li>
            Extract vim files according to platform (w/ user override option).
          </li>
          <li>Stop eclim.</li>
          <li>Prompt for optional backup of previous eclim plugin.</li>
          <li>Extract new eclim plugin to eclipse.</li>
          <li>
            Install / update window's service (keep linux init.d script as a
            manual step, since it shouldn't need to be updated often and will
            contain user defined values).
          </li>
          <li>
            When eclim has additional eclipse plugins (support for third party
            provided functionality), allow user to choose which plugins to
            install.  Validate third party plugin versions and maybe automate
            installation or upgrading of the dependent third party plugins for
            the user.
          </li>
        </ul>
        Windows: use <a href="http://nsis.sourceforge.net">nsis</a><br/>
        Linux:
        <a href="http://linux.org.mt/article/selfextract#N10093">
          self installing shell script
        </a>
      </action>
      <action context="ctags" dev="ervandew">
        Create a java based ctags that allows more robust regex for ctag
        patterns (replace .ctags).
      </action>
      <action context="languages" dev="ervandew">
        Support for other languages.
        <ul>
          <li>
            <a href="http://www.eclipse.org/cdt/">c/c++</a>
          </li>
          <li>
            <a href="http://www.eclipse.org/cobol/">cobol</a>
          </li>
          <li>
            <a href="http://www.ee.ryerson.ca/~hkataria/">javascript</a>
          </li>
          <li>
            <a href="http://e-p-i-c.sourceforge.net/">perl</a>
          </li>
          <li>
            <a href="http://www.phpeclipse.net">php</a>
          </li>
          <li>
            <a href="http://pydev.sourceforge.net/">python</a>
          </li>
          <li>
            <a href="http://rubyeclipse.sourceforge.net/">ruby</a><br/>
            <a href="http://www.radrails.org/">rails</a>
          </li>
        </ul>
        These will be prioritized by demand... My personal preference would be:
        <ol>
          <li>ruby</li>
          <li>python</li>
          <li>php</li>
          <li>javascript</li>
          <li>perl</li>
          <li>
            c/c++, cobol<br/>
            I'd only implement these if there was a high enough demand to
            warrant it, but would welcome contributions.
          </li>
        </ol>
      </action>
      <action context="thrid_party" dev="ervandew">
        Research third party plugins for additional functionality
        <ul>
          <li>Hibernate: JBoss IDE / Hibernate Tools</li>
          <li>Spring: Spring IDE</li>
          <li>Tapestry: Spindle</li>
        </ul>
      </action>
      <action context="debugger" dev="ervandew">
        Debugger functionality.
      </action>
      <action context="bean" dev="ervandew">
        Additional bean functionality (beaninfo, resource bundles).
      </action>
      <action context="cvs" dev="ervandew">
        CVS support.
        <ul>
          <li>cvs annotations: see who made what changes in the src.</li>
        </ul>
        This will be a real challenge to display in vim cleanly (vim signs
        aren't going to cut it).
      </action>
      <action context="run" dev="ervandew">
        Run main class and catch any exceptions into a new window and allow
        jumping to a stack trace element's referenced source location.
      </action>
      <action context="code_completion" dev="ervandew">
        More code completion
        <ul>
          <li>
            ant:<br/>
            plugin: org.eclipse.ant.ui
            interface:
              org.eclipse.jface.text.contentassist.IContentAssistProcessor
            implementation:
              org.eclipse.ant.internal.ui.editor.AntEditorCompletionProcessor
          </li>
          <li>forrest</li>
          <li>log4j</li>
        </ul>
      </action>
      <action context="code analysis" dev="ervandew">
        additional source code analysis
        <ul>
          <li><a href="http://pmd.sourceforge.net/">PMD</a></li>
            <li><a href="http://www.jutils.com/">Lint4j</a></li>
          <li>
            <a href="http://coverlipse.sourceforge.net">Coverclipse</a><br/>
            <a href="http://java-source.net/open-source/code-coverage">
              Other code coverage tools
            </a>
          </li>
          <li>
            <a href="http://java-source.net/open-source/code-analyzers">
              Other code analyizers
            </a>
          </li>
        </ul>
      </action>
      <action context="ant" dev="ervandew">
        Support :Ant from any file in a project that contains a build.xml file.
        (use ideas from my ant.vim plugin).
      </action>
      <action context="javadoc" dev="ervandew">
        implement a jcommenter.vim replacement.<br/>
        Added functionality:
        <ol>
          <li>no need to select multiline method declarations to comment.</li>
          <li>
            if method overrides / implements parent method, output {@inheritDoc}
            and @see, or if the method already has comments, prompt the user if
            inheritDoc should replace existing docs.
          </li>
          <li>Others I haven't thought of yet.</li>
        </ol>
      </action>
      <action context="todo/fixme" dev="ervandew">
        Command to add all FIXME/TODO into a grep quickfix.<br/>
        The eclipse compiler will pick these up as warnings, so may be able to
        use that.
      </action>
      <action context="folding" dev="ervandew">
        Lots of folding support... comments, code blocks, xml, html.<br/>
        Utilize matchit.vim.
      </action>
      <action context="code format" dev="ervandew">
        Find best way to configure eclipse code format tab style from within
        eclim.<br/>
        <source>
          import org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants;

          (JavaCore|IJavaProject).setOption(
            DefaultCodeFormatterConstants.FORMATTER_TAB_CHAR :
              DefaultCodeFormatterConstants.MIXED, JavaCore.TAB, JavaCore.SPACE
            DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE
            DefaultCodeFormatterConstants.FORMATTER_USE_TABS_ONLY_FOR_LEADING_INDENTATIONS :
              DefaultCodeFormatterConstants.TRUE|FALSE
          )
        </source>
      </action>
      <action context="aspectj" dev="ervandew">
        AspectJ support via <a href="http://www.eclipse.org/ajdt">AJDT</a>
      </action>
      <action context="xsd" dev="ervandew">
        <a href="http://www.eclipse.org/xsd">XSD</a>
      </action>
      <action context="wtp" dev="ervandew">
        Possible integration w/
        <a href="http://eclipse.org/webtools/index.html">
          eclipse web tools platform
        </a>
      </action>
      <action context="database" dev="ervandew">
        Database integration
        <ul>
          <li>Database metadata</li>
          <li>Data (paged table data)</li>
          <li>
            SQL editor w/ completion support for keywords, table names, column
            names, etc.
          </li>
        </ul>
      </action>
    </actions>

    <actions priority="eclipse 3.2">
      <action context="3.2 enhancements" dev="ervandew">
        <ul>
          <li>
            camel case searching ("NPE" finds "NullPointerException").
          </li>
          <li>
            javadoc context sensitive completion.
          </li>
          <li>
            automatic javadoc attachment (refer to org.eclipse.pde.core.javadoc
            extension point documentation)
          </li>
          <li>
            Code "Clean Up"
            <ul>
              <li>
                Remove Unused Code (imports, private methods, private constructors,
                private types).
              </li>
              <li>
                JSE 5.0 (add missing @Override, add missing @Deprecated)
              </li>
              <li>
                more to come with 3.2 release cycle
              </li>
            </ul>
          </li>
        </ul>
      </action>
    </actions>
  </todo>

  <changes>
    <release version="1.1.1" date="unreleased">
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Code completion results now sorted by type and then alphabetically.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Code corrections that cannot be applied in the standard way (those
        with no previews) are excluded until for now to prevent loss of code.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Simple searching from spring / hiberate / web.xml files is fixed.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Java import command is now restricted to the current project.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Java src file location (for almost all java commands) now uses the full
        path to find the file in eclipse rather than build the path from the
        file's package declaration and class name.  Fixes cases where the
        package name doesn't match up with the folder structure.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Xml validation errors that occur when no dtd is defined are filtered
        out (limitation of using xerces to support jdk 1.4).
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Relative xml entities are now resolved when validating an xml file.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Fixed logging template code for slf4j.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Fixed possible error when removing signs for marking errors / warnings
        for the current file.
      </action>
      <action dev="ervandew" type="add" context="Vim">
        Added CursorHold autocommand that shows the current error, if any, on
        the current cursor line.
      </action>
      <action dev="ervandew" type="update" context="Vim">
        Removed global variables g:EclimDebug and g:EclimEchoHighlight in favor
        of new g:EclimLogLevel and the corresponding highlight varibles.  See
        the <a href="vim/index.html#configuration">vim configuration</a>
        page for details.
      </action>
    </release>

    <release version="1.1.0" date="Dec 26, 2005">
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Code completion, searching, etc fixed on files with fileformat == 'dos'.
      </action>
      <action dev="ervandew" type="fix" context="Bug Fixes">
        Several other minor fixes and enhancements.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/source.html">Source validation</a>.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/doc.html">Javadoc</a> viewing.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/impl.html">Override/Impl</a> stub generation.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/bean.html">Bean getter/setter</a> generation.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/junit.html">JUnit</a> test method stub generation.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/search.html#alternate">Alternate searching</a>
        in code bases outside of an eclipse project.
      </action>
      <action dev="ervandew" type="add" context="Java">
        <a href="vim/java/correct.html">Code correction</a> via eclipse
        quickfix functionality.
      </action>
      <action dev="ervandew" type="add" context="Java">
        Support for viewing source files located in archives (zip, jar) when
        searching.<br/>
        Support for generating a source prototype when viewing search results
        that do not have a corresponding source file attached.
      </action>
      <action dev="ervandew" type="add" context="Java">
        Added some handy <a href="vim/java/abbreviations.html">abbreviations</a>.
      </action>
      <action dev="ervandew" type="add" context="Java">
        Added validation of the .classpath file when saving.  Errors are then
        reported via vim's quickfix.
      </action>
      <action dev="ervandew" type="update" context="Vim">
        A few vim scripts were renamed, so you will need to delete the old file
        when upgrading.
        <warning>
          <ul>
            <li>
              ftplugin/eclipse_classpath/eclipse_classpath.vim moved to<br/>
              ftplugin/eclipse_classpath/eclim.vim
            </li>
            <li>
              ftplugin/ivy/ivy.vim moved to<br/>
              ftplugin/ivy/eclim.vim
            </li>
            <li>
              ftplugin/maven_project/maven_project.vim moved to<br/>
              ftplugin/maven_project/eclim.vim
            </li>
          </ul>
        </warning>
      </action>
      <action dev="ervandew" type="add" context="Xml">
        <a href="vim/xml/validate.html">Xml validation</a>.
      </action>
    </release>
    <release version="1.0.0" date="Oct 16, 2005">
      <action dev="ervandew" type="add" context="Eclim">
        Initial release.
      </action>
    </release>
    <release version="unreleased" date="Aug 09, 2005">
      <action dev="ervandew" type="add" context="Documentation">
        Created eclim documentation site.
      </action>
    </release>
  </changes>

</status>
